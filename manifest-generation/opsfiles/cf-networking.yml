# add cf-networking release
- type: replace
  path: /releases/name=cf-networking?/version
  value: latest

# add network policy db to mysql
- type: replace
  path: /instance_groups/name=mysql/jobs/name=mysql/properties/cf_mysql/mysql/seeded_databases/-
  value:
    name: network_policy
    username: network_policy
    password: "((cf_mysql_mysql_seeded_databases_network_policy_password))"

# add users and client scopes
- type: replace
  path: /instance_groups/name=uaa/jobs/name=uaa/properties/uaa/scim/users/name=admin/groups/-
  value: network.admin

- type: replace
  path: /instance_groups/name=uaa/jobs/name=uaa/properties/uaa/clients/cf/scope?
  value: network.admin,network.write,cloud_controller.read,cloud_controller.write,openid,password.write,cloud_controller.admin,scim.read,scim.write,doppler.firehose,uaa.user,routing.router_groups.read,routing.router_groups.write

- type: replace
  path: /instance_groups/name=uaa/jobs/name=uaa/properties/uaa/clients/network-policy?
  value:
    authorities: uaa.resource,cloud_controller.admin_read_only
    authorized-grant-types: client_credentials,refresh_token
    secret: "((uaa_clients_network_policy_secret))"

- type: replace
  path: /instance_groups/name=uaa/jobs/name=uaa/properties/uaa/clients/datadog-firehose-nozzle?
  value:
    access-token-validity: 1209600
    authorized-grant-types: authorization_code,client_credentials,refresh_token
    override: true
    secret: "((uaa_clients_datadog_firehose_nozzle_secret))"
    scope: openid,oauth.approvals,doppler.firehose
    authorities: oauth.login,doppler.firehose

# point garden to external networker
- type: replace
  path: /instance_groups/name=diego-cell/jobs/name=garden/properties/garden/network_plugin?
  value: /var/vcap/packages/runc-cni/bin/garden-external-networker

- type: replace
  path: /instance_groups/name=diego-cell/jobs/name=garden/properties/garden/network_plugin_extra_args?/-
  value: --configFile=/var/vcap/jobs/garden-cni/config/adapter.json

# c2c jobs on the diego cell
- type: replace
  path: /instance_groups/name=diego-cell/jobs/-
  value:
    name: garden-cni
    release: cf-networking
    properties:
      cf_networking:
        garden_external_networker:
          cni_plugin_dir: /var/vcap/packages/silk/bin
          cni_config_dir: /var/vcap/jobs/cni-flannel/config/cni

- type: replace
  path: /instance_groups/name=diego-cell/jobs/-
  value:
    name: cni-flannel
    release: cf-networking
    properties:
      cf_networking:
        plugin:
          etcd_endpoints:
            - cf-etcd.service.cf.internal
          etcd_client_cert: "((etcd_client.certificate))"
          etcd_client_key: "((etcd_client.private_key))"
          etcd_ca_cert: "((etcd_client.ca))"

- type: replace
  path: /instance_groups/name=diego-cell/jobs/-
  value:
    name: netmon
    release: cf-networking

- type: replace
  path: /instance_groups/name=diego-cell/jobs/-
  value:
    name: vxlan-policy-agent
    release: cf-networking
    properties:
      cf_networking:
        vxlan_policy_agent:
          policy_server_url: https://policy-server.service.cf.internal:4003
          ca_cert: "((network_policy_client.ca))"
          client_cert: "((network_policy_client.certificate))"
          client_key: "((network_policy_client.private_key))"

# policy server vm
- type: replace
  path: /instance_groups/-
  value:
    name: policy-server
    azs:
    - z1
    - z2
    instances: 2
    vm_type: t2.small
    stemcell: default
    networks:
    - name: private
    jobs:
    - name: policy-server
      release: cf-networking
      properties:
        cf_networking:
          policy_server:
            uaa_client_secret: "((uaa_clients_network_policy_secret))"
            uaa_ca: "((uaa_ssl.ca))"
            ca_cert: "((network_policy_server.ca))"
            server_cert: "((network_policy_server.certificate))"
            server_key: "((network_policy_server.private_key))"
            database:
              type: mysql
              username: network_policy
              password: "((cf_mysql_mysql_seeded_databases_network_policy_password))"
              host: sql-db.service.cf.internal
              port: 3306
              name: network_policy
    - name: route_registrar
      release: routing
      properties:
        route_registrar:
          routes:
          - name: policy-server
            port: 4002
            registration_interval: 20s
            uris:
            - "api.((system_domain))/networking"
    - name: consul_agent
      release: consul
      consumes:
        consul: {from: consul_server}
      properties:
        consul:
          agent:
            services:
              policy-server:
                name: policy-server
                check:
                  interval: 5s
                  script: /bin/true
    - name: metron_agent
      release: loggregator
      properties:
        syslog_daemon_config:
          enable: false
        metron_agent:
          deployment: "((system_domain))"
          etcd:
            client_cert: "((etcd_client.certificate))"
            client_key: "((etcd_client.private_key))"
        metron_endpoint:
          shared_secret: "((dropsonde_shared_secret))"
        loggregator:
          tls:
            ca_cert: "((loggregator_ca.certificate))"
            metron:
              cert: "((loggregator_tls_metron.certificate))"
              key: "((loggregator_tls_metron.private_key))"
          etcd:
            require_ssl: true
            ca_cert: "((etcd_server.ca))"
            machines:
            - cf-etcd.service.cf.internal

# add vars
- type: replace
  path: /variables/-
  value:
    name: cf_mysql_mysql_seeded_databases_network_policy_password
    type: password

- type: replace
  path: /variables/-
  value:
    name: uaa_clients_network_policy_secret
    type: password

- type: replace
  path: /variables/-
  value:
    name: uaa_clients_datadog_firehose_nozzle_secret
    type: password

- type: replace
  path: /variables/-
  value:
    name: network_policy_ca
    type: certificate
    options:
      is_ca: true
      common_name: networkPolicyCA

- type: replace
  path: /variables/-
  value:
    name: network_policy_server
    type: certificate
    options:
      ca: network_policy_ca
      common_name: policy-server.service.cf.internal
      extended_key_usage:
      - server_auth

- type: replace
  path: /variables/-
  value:
    name: network_policy_client
    type: certificate
    options:
      ca: network_policy_ca
      common_name: clientName
      extended_key_usage:
      - client_auth
